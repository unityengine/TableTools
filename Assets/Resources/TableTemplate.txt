//This code create by igame ,don't modify
using System;
using System.Collections.Generic;
using System.Collections;
using UnityEngine;

namespace GCGame_igame.Table_igame
{

    [Serializable]
    public class Tab_{#}
    {
        private const string TAB_FILE_DATA = "Tables/{#}.txt";
        enum _ID
        {
            INVLAID_INDEX = -1,
            {#}
            MAX_RECORD
        }
        public static string GetInstanceFile(){return TAB_FILE_DATA; }
        {#}

        public static bool LoadTable(Dictionary<int, List<object>> _tab)
        {
            if (!TableManager.ReaderPList(GetInstanceFile(), SerializableTable, _tab))
            {
                string er = string.Format("Load File{0} Fail!!!", GetInstanceFile());
				Debug.LogError(er);
            }
            return true;
        }
        public static void SerializableTable(string[] valuesList, int skey, Dictionary<int, List<object>> _hash)
        {
            if ((int)_ID.MAX_RECORD != valuesList.Length)
            {
                string er = string.Format("Load {0} error as CodeSize:{1} not Equal DataSize:{2}", GetInstanceFile(), _ID.MAX_RECORD, valuesList.Length);
				Debug.LogError(er);
            }
            {#}

            if (_hash.ContainsKey(skey))
            {
                List<object> tList = _hash[skey];
                tList.Add(_values);
            }
            else
            {
                List<object> tList = new List<object>();
                tList.Add(_values);
                _hash.Add(skey, (List<object>)tList);
            }
        }


    }
}

